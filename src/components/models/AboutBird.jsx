/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: ahitch3 (https://sketchfab.com/ahitch3)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/updated-bird-alex-d498f6b08b0648268eac9f15b77acb92
Title: Updated Bird Alex
*/

"use client"
import React, { useRef, useEffect } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'

export default function AboutBird(props) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('/models/about_bird.glb')
  const { actions, names } = useAnimations(animations, group)
  
  // 현재 회전값 저장을 위한 ref
  const currentRotation = useRef(0);
  
  // 모델을 반투명하게 설정
  React.useEffect(() => {
    if (materials && materials.body) {
      materials.body.transparent = true;
      materials.body.opacity = 0.5; // 투명도 조절 (0.0 ~ 1.0)
    }
  }, [materials]);
  
  // 애니메이션 자동 재생 설정
  useEffect(() => {
    // 모델에 애니메이션이 있으면 첫 번째 애니메이션 재생
    if (names && names.length > 0) {
      actions[names[0]]?.reset().play().setEffectiveTimeScale(0.4);
    }
    
    console.log("Available animations:", names);
  }, [actions, names]);
  
  // 무한대 패턴으로 움직이되 뒤집히지 않게 설정
  useFrame((state) => {
    const time = state.clock.elapsedTime;
    
    // 무한대 패턴 계산 (리사주 곡선)
    const scale = 1.5; // 이동 범위 크기
    const speedX = 0.2; // X축 이동 속도 (더 느리게)
    const speedY = 0.1; // Y축 이동 속도 (더 느리게)
    
    // X, Y 위치 계산 (무한대 패턴)
    group.current.position.x = Math.sin(time * speedX) * scale;
    group.current.position.y = Math.sin(time * speedY * 2) * scale * 0.4 + 0.2; // 높이 조정
    
    // 진행 방향 계산 (X축 속도의 방향)
    const directionX = Math.cos(time * speedX) * speedX;
    
    // 목표 회전값 계산
    const targetRotation = Math.sign(directionX) * Math.PI / 6; // 약 30도
    
    // 현재 회전값에서 목표 회전값으로 부드럽게 보간
    // 낮은 값: 느린 전환, 높은 값: 빠른 전환
    const rotationSpeed = 0.04;
    
    // 현재 회전과 목표 회전 사이를 부드럽게 보간
    currentRotation.current += (targetRotation - currentRotation.current) * rotationSpeed;
    
    // 보간된 회전 적용
    group.current.rotation.y = currentRotation.current;
    
    // 약간의 기울기 효과 (너무 크지 않게)
    group.current.rotation.z = Math.sin(time * speedY) * 0.05;
  })

  return (
    <group ref={group} {...props} dispose={null} position={[0, 0, 0]} scale={1}>
      <group name="Sketchfab_Scene">
        <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]} scale={1.003}>
          <group name="root">
            <group name="GLTF_SceneRootNode" rotation={[Math.PI / 2, 0, 0]}>
              <group name="Sketchfab_model_0" rotation={[-Math.PI / 2, 0, 0]} scale={14.42}>
                <group
                  name="ddd66ab4b0fb49f18c2e85493cc58f8dfbx_1"
                  rotation={[Math.PI / 2, 0, 0]}
                  scale={0.01}>
                  <group name="Object_2_2">
                    <group name="RootNode_3">
                      <group name="Object_4_4">
                        <group name="GLTF_created_0">
                          <primitive object={nodes.GLTF_created_0_rootJoint} />
                          <skinnedMesh
                            name="Object_566"
                            geometry={nodes.Object_566.geometry}
                            material={materials.body}
                            skeleton={nodes.Object_566.skeleton}
                          />
                          <skinnedMesh
                            name="Object_569"
                            geometry={nodes.Object_569.geometry}
                            material={materials.body}
                            skeleton={nodes.Object_569.skeleton}
                          />
                          <skinnedMesh
                            name="Object_572"
                            geometry={nodes.Object_572.geometry}
                            material={materials.body}
                            skeleton={nodes.Object_572.skeleton}
                          />
                          <skinnedMesh
                            name="Object_575"
                            geometry={nodes.Object_575.geometry}
                            material={materials.body}
                            skeleton={nodes.Object_575.skeleton}
                          />
                          <skinnedMesh
                            name="Object_578"
                            geometry={nodes.Object_578.geometry}
                            material={materials.body}
                            skeleton={nodes.Object_578.skeleton}
                          />
                          <skinnedMesh
                            name="Object_581"
                            geometry={nodes.Object_581.geometry}
                            material={materials.body}
                            skeleton={nodes.Object_581.skeleton}
                          />
                          <skinnedMesh
                            name="Object_584"
                            geometry={nodes.Object_584.geometry}
                            material={materials.body}
                            skeleton={nodes.Object_584.skeleton}
                          />
                          <skinnedMesh
                            name="Object_587"
                            geometry={nodes.Object_587.geometry}
                            material={materials.body}
                            skeleton={nodes.Object_587.skeleton}
                          />
                          <skinnedMesh
                            name="Object_590"
                            geometry={nodes.Object_590.geometry}
                            material={materials.body}
                            skeleton={nodes.Object_590.skeleton}
                          />
                          <skinnedMesh
                            name="Object_593"
                            geometry={nodes.Object_593.geometry}
                            material={materials.body}
                            skeleton={nodes.Object_593.skeleton}
                          />
                          <skinnedMesh
                            name="Object_596"
                            geometry={nodes.Object_596.geometry}
                            material={materials.body}
                            skeleton={nodes.Object_596.skeleton}
                          />
                        </group>
                      </group>
                    </group>
                  </group>
                </group>
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/models/about_bird.glb')
 